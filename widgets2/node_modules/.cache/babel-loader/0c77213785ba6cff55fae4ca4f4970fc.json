{"ast":null,"code":"var _jsxFileName = \"/Users/Andrea/Desktop/AppAcademy/BOOTCAMP/WEEK11/W11D2/w11d2/widgets2/src/components/Clock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClockToggle = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"clock-toggle\",\n    onClick: props.toggleClock,\n    children: \"Toggle Clock\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\n_c = ClockToggle;\n\nconst Clock = props => {\n  _s();\n\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    tick = () => {\n      setTime(new Date());\n    };\n\n    let hours = time.getHours();\n    let minutes = time.getMinutes();\n    let seconds = time.getSeconds();\n    hours = hours < 10 ? `0${hours}` : hours;\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n\n    const timezone = time => {\n      time.toTimeString(); // Form: \"14:39:07 GMT-0600 (PDT)\"\n\n      time.replace(/[^A-Z]/g, \"\"); // Strip out all but capitals\n\n      time.slice(3); // Eliminate initial GMT\n    };\n\n    const interval = setInterval(tick, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []); // const [interval, setInterval] = useState(1000)\n  // componentDidMount() {\n  //   let interval = setInterval(tick, 1000);\n  // }\n  // componentWillUnmount() {\n  //   console.log(\"Clearing Clock interval!\")\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"clock-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [hours, \":\", minutes, \":\", seconds, \" \", timezone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: time.toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}; // export default Clock;\n\n\n_s(Clock, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n\n_c2 = Clock;\nexport default ClockToggle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ClockToggle\");\n$RefreshReg$(_c2, \"Clock\");","map":{"version":3,"sources":["/Users/Andrea/Desktop/AppAcademy/BOOTCAMP/WEEK11/W11D2/w11d2/widgets2/src/components/Clock.js"],"names":["React","useEffect","useState","ClockToggle","props","toggleClock","Clock","time","setTime","Date","tick","hours","getHours","minutes","getMinutes","seconds","getSeconds","timezone","toTimeString","replace","slice","interval","setInterval","clearInterval","toDateString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,OAAO,EAAEA,KAAK,CAACC,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH,CAVD;;KAAMF,W;;AAYN,MAAMG,KAAK,GAAGF,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAIO,IAAJ,EAAD,CAAhC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AAEdS,IAAAA,IAAI,GAAG,MAAM;AACXF,MAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACD,KAFD;;AAIE,QAAIE,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAZ;AACA,QAAIC,OAAO,GAAGN,IAAI,CAACO,UAAL,EAAd;AACA,QAAIC,OAAO,GAAGR,IAAI,CAACS,UAAL,EAAd;AACAL,IAAAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAgB,IAAGA,KAAM,EAAzB,GAA6BA,KAArC;AACAE,IAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAkB,IAAGA,OAAQ,EAA7B,GAAiCA,OAA3C;AACAE,IAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAkB,IAAGA,OAAQ,EAA7B,GAAiCA,OAA3C;;AAEA,UAAME,QAAQ,GAAIV,IAAD,IAAU;AACzBA,MAAAA,IAAI,CAACW,YAAL,GADyB,CACL;;AACpBX,MAAAA,IAAI,CAACY,OAAL,CAAa,SAAb,EAAwB,EAAxB,EAFyB,CAEG;;AAC5BZ,MAAAA,IAAI,CAACa,KAAL,CAAW,CAAX,EAHyB,CAGV;AAChB,KAJD;;AAMF,UAAMC,QAAQ,GAAGC,WAAW,CAACZ,IAAD,EAAO,IAAP,CAA5B;AAEA,WAAO,MAAM;AACXa,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAID,GAzBQ,EAyBN,EAzBM,CAAT,CAHqB,CA8BrB;AAEA;AACA;AACA;AAEA;AACA;AAEA;;AAGE,sBACE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,qBACGV,KADH,OACWE,OADX,OACqBE,OADrB,OAC+BE,QAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBACGV,IAAI,CAACiB,YAAL;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH,CAjED,C,CAmEA;;;GAnEMlB,K;;MAAAA,K;AAoEN,eAAeH,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nconst ClockToggle = props => {\n    return (\n      <button \n        type=\"button\"\n        className=\"clock-toggle\" \n        onClick={props.toggleClock}\n      >\n        Toggle Clock\n      </button>\n    )\n} \n\nconst Clock = props => {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n\n    tick = () => {\n      setTime(new Date());\n    }\n  \n      let hours = time.getHours();\n      let minutes = time.getMinutes();\n      let seconds = time.getSeconds();\n      hours = (hours < 10) ? `0${hours}` : hours;\n      minutes = (minutes < 10) ? `0${minutes}` : minutes;\n      seconds = (seconds < 10) ? `0${seconds}` : seconds;\n  \n      const timezone = (time) => {\n        time.toTimeString() // Form: \"14:39:07 GMT-0600 (PDT)\"\n        time.replace(/[^A-Z]/g, \"\") // Strip out all but capitals\n        time.slice(3); // Eliminate initial GMT\n      }\n\n    const interval = setInterval(tick, 1000);\n\n    return () => {\n      clearInterval(interval);\n    }\n\n  }, [])\n\n  // const [interval, setInterval] = useState(1000)\n\n  // componentDidMount() {\n  //   let interval = setInterval(tick, 1000);\n  // }\n  \n  // componentWillUnmount() {\n  //   console.log(\"Clearing Clock interval!\")\n    \n  // }\n  \n\n    return (\n      <section className=\"clock-section\">\n        <h1>Clock</h1>\n        <div className='clock'>\n          <p>\n            <span>\n              Time:\n            </span>\n            <span>\n              {hours}:{minutes}:{seconds} {timezone}\n            </span>\n          </p>\n          <p>\n            <span>\n              Date: \n            </span>\n            <span>\n              {time.toDateString()}\n            </span>\n          </p>\n        </div>\n      </section>\n    );\n}\n\n// export default Clock;\nexport default ClockToggle;"]},"metadata":{},"sourceType":"module"}