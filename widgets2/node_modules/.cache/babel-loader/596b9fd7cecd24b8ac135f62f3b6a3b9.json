{"ast":null,"code":"var _jsxFileName = \"/home/haeuncreative/app_academy/hw_lectures/w11/w11d2/widgets2/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { toQueryString } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = props => {\n  _s();\n\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(pollWeather, err => console.log(err), {\n      timeout: 10000\n    });\n\n    const pollWeather = async location => {\n      let url = 'http://api.openweathermap.org/data/2.5/weather?';\n      const apiKey = process.env.REACT_APP_WEATHER_API;\n      const params = {\n        lat: location.coords.latitude,\n        lon: location.coords.longitude,\n        appid: apiKey\n      };\n      url += toQueryString(params);\n      const res = await fetch(url);\n\n      if (res.ok) {\n        const weather = await res.json();\n        this.setState({\n          weather\n        });\n      } else {\n        alert(\"Check Weather API key!\");\n      }\n    };\n  }, []); // const weather = weather;\n\n  let content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"loading weather...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 19\n  }, this);\n\n  if (weather) {\n    const temp = (weather.main.temp - 273.15) * 1.8 + 32;\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [temp.toFixed(1), \" degrees\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"weather-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Weather, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/haeuncreative/app_academy/hw_lectures/w11/w11d2/widgets2/src/components/Weather.js"],"names":["React","useState","useEffect","toQueryString","Weather","props","weather","setWeather","navigator","geolocation","getCurrentPosition","pollWeather","err","console","log","timeout","location","url","apiKey","process","env","REACT_APP_WEATHER_API","params","lat","coords","latitude","lon","longitude","appid","res","fetch","ok","json","setState","alert","content","temp","main","name","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,UAA9B;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AAEEC,EAAAA,SAAS,CAAE,MAAM;AACfM,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACAC,WADA,EAECC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFT,EAGA;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAHA;;AAOF,UAAMJ,WAAW,GAAG,MAAOK,QAAP,IAAoB;AACtC,UAAIC,GAAG,GAAG,iDAAV;AACA,YAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA3B;AAEA,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEP,QAAQ,CAACQ,MAAT,CAAgBC,QADR;AAEbC,QAAAA,GAAG,EAAEV,QAAQ,CAACQ,MAAT,CAAgBG,SAFR;AAGbC,QAAAA,KAAK,EAAEV;AAHM,OAAf;AAMAD,MAAAA,GAAG,IAAId,aAAa,CAACmB,MAAD,CAApB;AAEA,YAAMO,GAAG,GAAG,MAAMC,KAAK,CAACb,GAAD,CAAvB;;AACA,UAAIY,GAAG,CAACE,EAAR,EAAY;AACV,cAAMzB,OAAO,GAAG,MAAMuB,GAAG,CAACG,IAAJ,EAAtB;AACA,aAAKC,QAAL,CAAc;AAAE3B,UAAAA;AAAF,SAAd;AACD,OAHD,MAIK;AACH4B,QAAAA,KAAK,CAAE,wBAAF,CAAL;AACD;AACF,KApBD;AAoBE,GA5BO,EA4BL,EA5BK,CAAT,CAJqB,CAkCrB;;AACA,MAAIC,OAAO,gBAAG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI7B,OAAJ,EAAa;AACX,UAAM8B,IAAI,GAAG,CAAC9B,OAAO,CAAC+B,IAAR,CAAaD,IAAb,GAAoB,MAArB,IAA+B,GAA/B,GAAqC,EAAlD;AACAD,IAAAA,OAAO,gBACL;AAAA,8BACE;AAAA,kBAAI7B,OAAO,CAACgC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAIF,IAAI,CAACG,OAAL,CAAa,CAAb,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMH;;AAEC,sBACA;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH,CAvDD;;GAAM/B,O;;KAAAA,O;AAyDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toQueryString } from '../utils';\n\nconst Weather = props => {\n\n  const [weather, setWeather] = useState(null);\n    \n    useEffect (() => {\n      navigator.geolocation.getCurrentPosition(\n      pollWeather,\n      (err) => console.log(err),\n      { timeout: 10000 }\n      );\n\n\n    const pollWeather = async (location) => {\n      let url = 'http://api.openweathermap.org/data/2.5/weather?';\n      const apiKey = process.env.REACT_APP_WEATHER_API;\n\n      const params = {\n        lat: location.coords.latitude,\n        lon: location.coords.longitude,\n        appid: apiKey\n      };\n      \n      url += toQueryString(params);\n\n      const res = await fetch(url);\n      if (res.ok) {\n        const weather = await res.json();\n        this.setState({ weather });\n      }\n      else {\n        alert (\"Check Weather API key!\")\n      }\n    }}, []) \n\n    // const weather = weather;\n    let content = <div className='loading'>loading weather...</div>;\n    \n    if (weather) {\n      const temp = (weather.main.temp - 273.15) * 1.8 + 32;\n      content = (\n        <div>\n          <p>{weather.name}</p>\n          <p>{temp.toFixed(1)} degrees</p>\n        </div>\n      );\n  }\n\n    return (\n    <section className=\"weather-section\">\n      <h1>Weather</h1>\n      <div className='weather'>\n        {content}\n      </div>\n    </section>\n  );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}